---
import Html from "../icons/Tecnologias/Lenguajes/Html.astro";
import Css from "../icons/Tecnologias/Lenguajes/Css.astro";
import Js from "../icons/Tecnologias/Lenguajes/Js.astro";
import Python from "../icons/Tecnologias/Lenguajes/Python.astro";
import Android from "../icons/Tecnologias/Lenguajes/Android.astro";
import Php from "../icons/Tecnologias/Lenguajes/Php.astro";
import React from "../icons/Tecnologias/Frameworks_Librerias/React.astro";
import Social_icons from "./Social_icons.astro";
import Github from "../icons/Social/Github.astro";
import Link from "../icons/Social/Link.astro";

const TAGS = {
  Html: {
    name: "Html",
    class: "bg-[#963419] text-white",
    icon: Html,
  },
  Css: {
    name: "Css",
    class: "bg-[#07436b] text-white",
    icon: Css,
  },
  Js: {
    name: "Js",
    class: "bg-[#a39535] text-white",
    icon: Js,
  },
  React: {
    name: "React",
    class: "bg-[#1c7777] text-white",
    icon: React,
  },
  Python: {
    name: "Python",
    class: "bg-[#167bc2] text-white",
    icon: Python,
  },
  Php: {
    name: "Php",
    class: "bg-[#b68fff] text-white",
    icon: Php,
  },
  Android: {
    name: "Android",
    class: "bg-[#e6ffe8] text-black",
    icon: Android,
  },
};

const PROJECTS = [
  {
    title: "Empresa Amecar - Sistema de Ventas (Aplicación web)",
    description: "Proyecto de final de carrera, utilizando Flask (Python) en el backend y SQL Server como base de datos, siguiendo el esquema MVC. En el frontend, implementé HTML, CSS, JavaScript (jQuery) y Bootstrap para una interfaz responsiva.",
    link: "/proyecto1",
    github: "https://github.com/DiegoBernacheaRojas/AmecarApp/tree/master",
    image: "/projects/AmecarApp/login2.PNG",
    tags: [TAGS.Html, TAGS.Css, TAGS.Js, TAGS.Python],
  },
  {
    title: "Empresa Geor - Sistema de Asistencias Virtual (Conjunto de apicaciónes web y movil)",
    description: "Este proyecto personal de sistema de asistencias virtual es una solución integral desarrollada para resolver un problema real en la empresa durante mis prácticas preprofesionales, orientada a controlar la asistencia de empleados remotos. Se utilizó HTML, CSS y JavaScript para la interfaz, implementando React en el front-end para el empleado y una aplicación web administrativa basada en JS para el administrador. Además, se desarrolló una app móvil en Android para facilitar el registro de asistencia desde dispositivos móviles. En el backend, se empleó PHP con Laravel y se utilizó la base de datos MySQL para garantizar una robusta gestión de datos.",
    link: "/proyecto2",
    github: "https://github.com/DiegoBernacheaRojas/Sistema-Asistencias",
    image: "/projects/AsistenciaSystem/webappEmp/Login.PNG",
    tags: [TAGS.Html, TAGS.Css, TAGS.Js, TAGS.Android, TAGS.Php],
  },
  // {
  //   title: "Aplicacion del Clima",
  //   description: "Pagina creada con el objetivo de usar API del clima y probar su funcionamiento. Se utilizo Html, Css y JS",
  //   link: "#",
  //   github: "https://github.com/Pietro923/api-del-clima",
  //   image: "/projects/proyecto2.webp",
  //   tags: [TAGS.Html, TAGS.Css, TAGS.Js],
  // },
];
---

<div class="flex flex-col gap-y-16">
  {PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col md:flex-row md:space-x-8 space-y-8 md:space-y-0">
      <div class="w-full md:w-1/2 flex items-center group">
        <div class="relative flex flex-col items-center transition duration-500 ease-in-out transform shadow-xl overflow-hidden rounded-xl sm:rounded-xl lg:border lg:border-gray-800 group-hover:shadow-2xl">
          <img alt="Captura del Proyecto" class="object-cover object-top w-full h-full transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
        </div>
      </div>

      <div class="w-full md:w-1/2 flex flex-col justify-center">
        <h3 class="text-2xl font-bold mb-2">{title}</h3>
        <div class="flex flex-wrap mt-2">
          <ul class="flex flex-row mb-2 gap-x-2">
            {tags.map((tag) => (
              <li = {tag.name}>
                <span class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}>
                  <tag.icon class="size-4" />
                  {tag.name}
                </span>
              </li>
            ))}
          </ul>
        </div>

        <div class="mt-2 text-lg mb-4">{description}</div>

        <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <Social_icons href={github}>
              <Github class="size-6" />
              Codigo
            </Social_icons>
          )}
          {link && (
            <Social_icons href={link}>
              <Link class="size-4" />
              Detalles
            </Social_icons>
          )}
        </footer>
      </div>
    </article>
  ))}
</div>
